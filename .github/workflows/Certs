CONTEXT	REGISTRY PATH	EXPLANATION
User	HKCU:\SOFTWARE\Microsoft\SystemCertificates\	Physical store for user-specific public keys
User	HKCU:\SOFTWARE\Policies\Microsoft\SystemCertificates\	Physical store for user-specific public keys installed by Active Directory (AD) Group Policy Objects (GPOs)
Computer	HKLM:\SOFTWARE\Microsoft\SystemCertificates\	Physical store for machine-wide public keys
Computer	HKLM:\SOFTWARE\Microsoft\Cryptography\Services\	Physical store for keys associated with a specific service
Computer	HKLM:\SOFTWARE\Policies\Microsoft\SystemCertificates\	Physical store for machine-wide public keys installed by GPOs
Computer	HKLM:\SOFTWARE\Microsoft\EnterpriseCertificates\	Physical store for machine-wide public keys installed by the Enterprise PKI Containers within an AD domain

CONTEXT	FILE LOCATION	EXPLANATION
User	$env:APPDATA\Microsoft\SystemCertificates\	Physical store for user-specific public keys and pointers to private keys
User	$env:APPDATA\Microsoft\Crypto\	Physical store for user-specific private key containers
Computer	$env:ProgramData\Microsoft\Crypto\	Physical store for machine-wide private key containers

#Get-ChildItem -Path Cert:\LocalMachine\My
#Get-ChildItem -Path Cert:\CurrentUser\Root\
#((Get-ChildItem -Path Cert:\CurrentUser\Root\ | select -First 1).Extensions | Where-Object {$_.Oid.FriendlyName -eq "Key Usage"}).format($true)

#$thumb = "3943212E679E9FC568D30774AD72D683E5468B0C"
#Get-ChildItem -Path Cert:\CurrentUser\Root\ | Where-Object {$_.Thumbprint -eq $thumb

#New-SelfSignedCertificate -Subject 'User-Test' -CertStoreLocation 'Cert:\CurrentUser\My'
#New-SelfSignedCertificate -Subject 'Computer-Test' -CertStoreLocation 'Cert:\LocalMachine\My

#$certificate = Get-Item (Get-ChildItem -Path Cert:\CurrentUser\My\ | Where-Object {$_.Subject -eq $_.Issuer}).PSPath
#Export-Certificate -FilePath $env:USERPROFILE\Desktop\certificate.cer -Cert $certificate
#$certificate.HasPrivateKey

#$pfxPassword = "ComplexPassword!" | ConvertTo-SecureString -AsPlainText -Force
#Export-PfxCertificate -FilePath $env:USERPROFILE\Desktop\certificate.pfx -Password $pfxPassword -Cert $certificate
#Import-Certificate -FilePath $env:USERPROFILE\Desktop\certificate.cer -CertStoreLocation Cert:\CurrentUser\My

#$pfxPassword = "ComplexPassword!" | ConvertTo-SecureString -AsPlainText -Force
#Import-PfxCertificate -Exportable -Password $pfxPassword -CertStoreLocation Cert:\CurrentUser\My -FilePath $env:USERPROFILE\Desktop\certificate.pfx

#$certificate = Get-Item (Get-ChildItem -Path Cert:\CurrentUser\My\ | Where-Object {$_.Subject -eq $_.Issuer}).PSPath
#$certificate.Thumbprint
#$certificate.SerialNumber
#$certificate.Subject
#$certificate | Remove-Item

#Get-ChildItem -Path HKCU:\Software\Microsoft\SystemCertificates\CA\Certificates\
#Get-ChildItem -Path $env:APPDATA\Microsoft\SystemCertificates\My\Certificates\
#Get-ChildItem -Path $env:APPDATA\Microsoft\SystemCertificates\My\Keys\
#Get-ChildItem -Path $env:APPDATA\Microsoft\Crypto\Keys



Get-ChildItem -Path $env:APPDATA\Microsoft\SystemCertificates\My\Certificates\ | Where-Object {$_.Issuer -notlike "*Microsoft*"} | Select-Object Subject, Issuer, NotAfter

#$serverNames = Get-Content .\servers.txt
#$serverNames = 'Server1','Server2','Server3'
$serverName = "SERVER_NAME"
Invoke-Command -ComputerName $serverName -ScriptBlock {
    Get-ChildItem -Path $env:APPDATA\Microsoft\SystemCertificates\My\Certificates\ | Where-Object {$_.Issuer -notlike "*Microsoft*"} | Select-Object Subject, Issuer, NotAfter
}
