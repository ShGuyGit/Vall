#ex 1

$OldObj = Get-DnsServerResourceRecord -Name "Host01" -ZoneName "contoso.com" -RRType "A"
$NewObj = $OldObj.Clone()
$NewObj.TimeToLive = [System.TimeSpan]::FromHours(2)
Set-DnsServerResourceRecord -NewInputObject $NewObj -OldInputObject $OldObj -ZoneName "contoso.com" -PassThru

#ex2
#$getForest = [system.directoryservices.activedirectory.Forest]::GetCurrentForest() | Select -ExpandProperty Domains | Select -Last 1
$DCServers = $get-addomaincontroller | ForEach-Object {$_.DomainControllers} | ForEach-Object {$_.Name}
$Results = @()
$hostname = Read-Host "Please provide the hostname"
$newip = Read-Host "Please provide the new IP"
$zonename = Read-Host "Please provide the DNS zone"
foreach ($DC in $DCServers)
{
$old = Get-DnsServerResourceRecord -ComputerName $DC -ZoneName $zonename -Name $hostname -RRType A
$new = Get-DnsServerResourceRecord -ComputerName $DC -ZoneName $zonename -Name $hostname -RRType A
$new.recorddata.ipv4address=[System.Net.IPAddress]::parse($newip)
Set-DnsServerResourceRecord -ComputerName $DC -NewInputObject $new -OldInputObject $old -ZoneName "zone.com" -Verbose -ErrorAction SilentlyContinue
}

#change clint dns server info
$computers = "computer1", "computer2", "computer3"
$dnsServer = "192.168.1.1"

foreach ($computer in $computers) {
    $adapter = Get-WmiObject -Class Win32_NetworkAdapterConfiguration -Filter "IPEnabled='True'" -ComputerName $computer
    $adapter.SetDNSServerSearchOrder($dnsServer)
}


$computers = "computer1", "computer2", "computer3"
$dnsServers = "192.168.1.1", "192.168.1.2"

foreach ($computer in $computers) {
    $adapter = Get-WmiObject -Class Win32_NetworkAdapterConfiguration -Filter "IPEnabled='True'" -ComputerName $computer
    $adapter.SetDNSServerSearchOrder($dnsServers)
}

$computers = Import-Csv -Path "C:\temp\computers.csv"
$dnsServers = "192.168.1.1", "192.168.1.2"

foreach ($computer in $computers) {
    $adapter = Get-WmiObject -Class Win32_NetworkAdapterConfiguration -Filter "IPEnabled='True'" -ComputerName $computer.Name
    $adapter.SetDNSServerSearchOrder($dnsServers)
}
