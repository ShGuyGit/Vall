$DCs = Get-ADDomainController -Filter *
$Results = @()

foreach ($DC in $DCs) {
    $Replication = Get-ADReplicationPartnerMetadata -Target $DC.HostName
    $LastReplication = $Replication | Select-Object LastReplicationSuccess
    $Result = New-Object PSObject -Property @{
        DCName = $DC.HostName
        LastReplicationSuccess = $LastReplication.LastReplicationSuccess
    }
    $Results += $Result
}

$Results | Format-Table -AutoSize | Out-String | Out-File C:\Temp\ReplicationStatus.txt

$EmailFrom = "youremail@yourdomain.com"
$EmailTo = "recipientemail@recipientdomain.com"
$Subject = "AD Replication Status"
$Body = Get-Content C:\Temp\ReplicationStatus.txt | Out-String
$SMTPServer = "smtp.yourdomain.com"


$SMTPMessage = New-Object System.Net.Mail.MailMessage($EmailFrom, $EmailTo, $Subject, $Body)
$SMTPClient = New-Object Net.Mail.SmtpClient($SmtpServer, $SmtpPort)
$SMTPClient.EnableSsl = $true
#$SMTPClient.Credentials = New-Object System.Net.NetworkCredential($SMTPUsername, $SMTPPassword)
$SMTPClient.Send($SMTPMessage)


Cleanup shouldn't just be removing inactive accounts and whatnot. It should also be a review of security ACLs and ways that an attacker can gain access. Check out Sharphound/bloodhound. It will perform an attack path analysis for you that you can use to improve how things are set up. Forest-Druid can do something similar. Run PurpleKnight and fix what it recommends. Run PingCastle and do the same thing.

Limit the use of Domain Admins and other Privileged Groups
Use at least two accounts
Secure the domain administrator account
Disable the local administrator account (on all computers)
Use Laps
Use a secure admin workstation (SAW)
Enable audit policy settings with group policy
Monitor for signs of compromise
Password complexity sucks (use passphrases)
Use descriptive security group names
Find and remove unused user and computer accounts
Remove Users from the Local Administrator Group
Do not install additional software or server roles on DCs
Patch management and vulnerability scanning
Use secure DNS services to block malicious domains
Run supported operating systems
Use two factor for office 365 and remote access
Monitor DHCP logs for connected devices
Monitor DNS logs for malicious network activity
Use latest ADFS and azure security features
Use office 365 secure score
Have a recovery plan
Document delegation to Active Directory
Lock down service accounts
Use security baselines and benchmarks
Active Directory Security Checklist

Choose a model
Administration of AD objects becomes easier when the OUs mirror your organization's structure. Different OU models serve their own purposes. For example:

The geographic model separates your OUs based on the location of your offices
The department model divides OUs corresponding to the departments in your organization
The type-based model classifies OUs based on object types
Choose an OU model that best fits your administrative needs.

 
Set apart users and computers
In AD, when user and computer objects are created, they are added to their respective containers by default. However, GPOs cannot be linked to containers; instead, create separate OUs for users and computers that require GPO application. This practice can be followed irrespective of the OU model you choose for your organization.

 
Utilize OU nesting
With OU nesting, you can make use of inheritance and delegate administrative rights flexibly. For example, if you want to delegate multiple permissions to a high-level user but you don't want those permissions to affect some of the users in that OU, you can create a nested OU that contains those users and apply the deny permission. This will prevent the creation of parallel OUs in your directory. Nesting also helps separate different AD objects like users, computers, and groups inside a parent OU.

 
Document your OU design
Your OU structure is always dynamic, as new objects are created regularly. So, document your OU structure and design by recording details such as the OU name, description, who created the OU, and when it was created. This information will be extremely valuable in the future to prevent accidental deletion of important OUs by administrators.

ex.
domain.tld ->
 ORG -> (yes, a simple OU named 'ORG')
   > Servers ->
     > RDS
	 > Regular
	 > SpecialSnowflakes
   > Groups -> 
     > Permissions
     > Roles
	 > Distribution
   > ServiceAccounts
   > Users -> 
	 > Regular ->
	   > HighSecurityAccounts
	   > Karens
	   > CommonPeople
	 > ExternalUsers / Contractors
   > Workstations -> 
     > RegularComputers
	 > MobileComputers
   > Fired
